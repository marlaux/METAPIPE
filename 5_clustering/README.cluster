./clustering_swarm_wrap.sh -h
##################################################
Global dereplication, clustering using SWARM, formatting and chimera searching wrapped script.

Usage: ./clustering_swarm_wrap.sh [-l length] [-o output] [-p pwd]
-l     expected amplicon lenght
-o     output name 'my_project_marker'
-p     complete path to dereplicated by samples directory (3_read_cleaning step, derep_sample)
-h     print this help

##################################################

The clustering_swarm_complete.sh runs as a slurm job, so you need to open, edit save and run through run_cluster_swarm.slurm

Edit the script:
vi clustering_swarm_complete.sh
GLOBAL_DP="my_project_marker.fas" !!!keep the .fas suffix!!!
	>>>This global dereplicated multifasta is the input for clustering.
LENGTH= int >>> expected amplicons length in bp.
line 13: your dereplicated individual samples from 3_read_cleaning step.

The first part does the global dereplication from the dereplicated by samples step. 
The second part is the clustering itself, please take a look in SWARM arguments and documentation: https://github.com/torognes/swarm. 
The third part is the sorting by size.
The forth part is the chimera search.
The last part edits the abundance annotation from ';size=X;' to '_X'

Each one of these four steps have your own script, you can run one by one:
global_dereplication.sh >> my_samples_global_derep.fas
clustering_swarm.sh >>  my_samples_global_derep.struct
			my_samples_global_derep.stats
			my_samples_global_derep_1f_representatives.fas
			my_samples_global_derep.swarms
sort_representatives.sh >> my_samples_global_derep_rep_sorted.fas
chimera_checking.sh >> my_samples_global_derep_1f_representatives.uchime

all those outputs will be necessary to build the OTU table.


